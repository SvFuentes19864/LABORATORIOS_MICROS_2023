

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Apr 10 18:58:10 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0012                     _T2CONbits	set	18
   213  000C                     _PIR1bits	set	12
   214  001D                     _CCP2CONbits	set	29
   215  0017                     _CCP1CONbits	set	23
   216  0007                     _PORTC	set	7
   217  0005                     _PORTA	set	5
   218  001B                     _CCPR2L	set	27
   219  001F                     _ADCON0bits	set	31
   220  001E                     _ADRESH	set	30
   221  0015                     _CCPR1L	set	21
   222  0066                     _ADIF	set	102
   223  0092                     _PR2	set	146
   224  0087                     _TRISCbits	set	135
   225  009F                     _ADCON1bits	set	159
   226  008F                     _OSCCONbits	set	143
   227  0087                     _TRISC	set	135
   228  0085                     _TRISA	set	133
   229  0189                     _ANSELH	set	393
   230  0188                     _ANSEL	set	392
   231                           
   232                           	psect	cinit
   233  07F7                     start_initialization:	
   234                           ; #config settings
   235                           
   236  07F7                     __initialization:
   237                           
   238                           ; Clear objects allocated to COMMON
   239  07F7  01FD               	clrf	__pbssCOMMON& (0+127)
   240                           
   241                           ; Clear objects allocated to BANK0
   242  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   243  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   244  07FA  01B0               	clrf	__pbssBANK0& (0+127)
   245  07FB  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   246  07FC                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  07FC                     __end_of__initialization:
   250  07FC  0183               	clrf	3
   251  07FD  120A  118A  2F75   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMMON
   254  007D                     __pbssCOMMON:
   255  007D                     _POT1:
   256  007D                     	ds	1
   257                           
   258                           	psect	bssBANK0
   259  0030                     __pbssBANK0:
   260  0030                     _Bandera:
   261  0030                     	ds	1
   262  0031                     _POT2:
   263  0031                     	ds	1
   264                           
   265                           	psect	cstackCOMMON
   266  0070                     __pcstackCOMMON:
   267  0070                     ?_setup:
   268  0070                     ??_setup:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_setupADC:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ??_setupADC:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_setupTMR2:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ??_setupTMR2:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_setupPWM:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ??_setupPWM:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_main:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?___wmul:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ___wmul@multiplier:	
   296                           ; 2 bytes @ 0x0
   297                           
   298                           
   299                           ; 2 bytes @ 0x0
   300  0070                     	ds	2
   301  0072                     ___wmul@multiplicand:
   302                           
   303                           ; 2 bytes @ 0x2
   304  0072                     	ds	2
   305  0074                     ??___wmul:
   306  0074                     ___wmul@product:	
   307                           ; 1 bytes @ 0x4
   308                           
   309                           
   310                           ; 2 bytes @ 0x4
   311  0074                     	ds	2
   312  0076                     ?___awdiv:
   313  0076                     ___awdiv@divisor:	
   314                           ; 2 bytes @ 0x6
   315                           
   316                           
   317                           ; 2 bytes @ 0x6
   318  0076                     	ds	2
   319  0078                     ___awdiv@dividend:
   320                           
   321                           ; 2 bytes @ 0x8
   322  0078                     	ds	2
   323  007A                     ??___awdiv:
   324                           
   325                           ; 1 bytes @ 0xA
   326  007A                     	ds	1
   327  007B                     ??_map:
   328  007B                     map@output:	
   329                           ; 1 bytes @ 0xB
   330                           
   331                           
   332                           ; 2 bytes @ 0xB
   333  007B                     	ds	2
   334                           
   335                           	psect	cstackBANK0
   336  0020                     __pcstackBANK0:
   337  0020                     ___awdiv@counter:
   338                           
   339                           ; 1 bytes @ 0x0
   340  0020                     	ds	1
   341  0021                     ___awdiv@sign:
   342                           
   343                           ; 1 bytes @ 0x1
   344  0021                     	ds	1
   345  0022                     ___awdiv@quotient:
   346                           
   347                           ; 2 bytes @ 0x2
   348  0022                     	ds	2
   349  0024                     ?_map:
   350  0024                     map@input:	
   351                           ; 2 bytes @ 0x4
   352                           
   353                           
   354                           ; 2 bytes @ 0x4
   355  0024                     	ds	2
   356  0026                     map@in_min:
   357                           
   358                           ; 2 bytes @ 0x6
   359  0026                     	ds	2
   360  0028                     map@in_max:
   361                           
   362                           ; 2 bytes @ 0x8
   363  0028                     	ds	2
   364  002A                     map@out_min:
   365                           
   366                           ; 2 bytes @ 0xA
   367  002A                     	ds	2
   368  002C                     map@out_max:
   369                           
   370                           ; 2 bytes @ 0xC
   371  002C                     	ds	2
   372  002E                     ??_main:
   373                           
   374                           ; 1 bytes @ 0xE
   375  002E                     	ds	2
   376                           
   377                           	psect	maintext
   378  0775                     __pmaintext:	
   379 ;;
   380 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   381 ;;
   382 ;; *************** function _main *****************
   383 ;; Defined at:
   384 ;;		line 63 in file "LAB_07.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0, pclath, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : B00/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0
   400 ;;      Temps:          0       2       0       0       0
   401 ;;      Totals:         0       2       0       0       0
   402 ;;Total ram usage:        2 bytes
   403 ;; Hardware stack levels required when called: 2
   404 ;; This function calls:
   405 ;;		_map
   406 ;;		_setup
   407 ;;		_setupADC
   408 ;;		_setupPWM
   409 ;;		_setupTMR2
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415  0775                     _main:	
   416                           ;psect for function _main
   417                           
   418  0775                     l938:	
   419                           ;incstack = 0
   420                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   421                           
   422                           
   423                           ;LAB_07.c: 65:     setup();
   424  0775  120A  118A  267B  120A  118A  	fcall	_setup
   425                           
   426                           ;LAB_07.c: 66:     setupADC();
   427  077A  120A  118A  2668  120A  118A  	fcall	_setupADC
   428                           
   429                           ;LAB_07.c: 67:     setupTMR2();
   430  077F  120A  118A  265C  120A  118A  	fcall	_setupTMR2
   431                           
   432                           ;LAB_07.c: 68:     setupPWM();
   433  0784  120A  118A  2691  120A  118A  	fcall	_setupPWM
   434  0789                     l940:
   435                           
   436                           ;LAB_07.c: 72:         if (Bandera == 0){
   437  0789  1283               	bcf	3,5	;RP0=0, select bank0
   438  078A  1303               	bcf	3,6	;RP1=0, select bank0
   439  078B  0830               	movf	_Bandera,w
   440  078C  1D03               	btfss	3,2
   441  078D  2F8F               	goto	u341
   442  078E  2F90               	goto	u340
   443  078F                     u341:
   444  078F  2FC1               	goto	l956
   445  0790                     u340:
   446  0790                     l942:
   447                           
   448                           ;LAB_07.c: 74:             CCPR1L = (char) map (ADRESH, 0, 255, 10, 135);
   449  0790  081E               	movf	30,w	;volatile
   450  0791  00AE               	movwf	??_main
   451  0792  01AF               	clrf	??_main+1
   452  0793  082E               	movf	??_main,w
   453  0794  00A4               	movwf	map@input
   454  0795  082F               	movf	??_main+1,w
   455  0796  00A5               	movwf	map@input+1
   456  0797  3000               	movlw	0
   457  0798  00A6               	movwf	map@in_min
   458  0799  00A7               	movwf	map@in_min+1
   459  079A  30FF               	movlw	255
   460  079B  00A8               	movwf	map@in_max
   461  079C  3000               	movlw	0
   462  079D  00A9               	movwf	map@in_max+1
   463  079E  300A               	movlw	10
   464  079F  00AA               	movwf	map@out_min
   465  07A0  3000               	movlw	0
   466  07A1  00AB               	movwf	map@out_min+1
   467  07A2  3087               	movlw	135
   468  07A3  00AC               	movwf	map@out_max
   469  07A4  3000               	movlw	0
   470  07A5  00AD               	movwf	map@out_max+1
   471  07A6  120A  118A  26D5  120A  118A  	fcall	_map
   472  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   473  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   474  07AD  0824               	movf	?_map,w
   475  07AE  0095               	movwf	21	;volatile
   476  07AF                     l944:
   477                           
   478                           ;LAB_07.c: 75:             ADCON0bits.CHS3 = 0;
   479  07AF  129F               	bcf	31,5	;volatile
   480  07B0                     l946:
   481                           
   482                           ;LAB_07.c: 76:             ADCON0bits.CHS2 = 0;
   483  07B0  121F               	bcf	31,4	;volatile
   484  07B1                     l948:
   485                           
   486                           ;LAB_07.c: 77:             ADCON0bits.CHS1 = 0;
   487  07B1  119F               	bcf	31,3	;volatile
   488  07B2                     l950:
   489                           
   490                           ;LAB_07.c: 78:             ADCON0bits.CHS0 = 0;
   491  07B2  111F               	bcf	31,2	;volatile
   492  07B3                     l952:
   493                           
   494                           ;LAB_07.c: 80:             Bandera = 1;
   495  07B3  01B0               	clrf	_Bandera
   496  07B4  0AB0               	incf	_Bandera,f
   497  07B5                     l954:
   498                           
   499                           ;LAB_07.c: 81:             _delay((unsigned long)((50)*(4000000/4000.0)));
   500  07B5  3041               	movlw	65
   501  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   502  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   503  07B8  00AF               	movwf	??_main+1
   504  07B9  30ED               	movlw	237
   505  07BA  00AE               	movwf	??_main
   506  07BB                     u377:
   507  07BB  0BAE               	decfsz	??_main,f
   508  07BC  2FBB               	goto	u377
   509  07BD  0BAF               	decfsz	??_main+1,f
   510  07BE  2FBB               	goto	u377
   511  07BF  2FC0               	nop2
   512                           
   513                           ;LAB_07.c: 83:         }
   514  07C0  2FEB               	goto	l972
   515  07C1                     l956:
   516  07C1  0330               	decf	_Bandera,w
   517  07C2  1D03               	btfss	3,2
   518  07C3  2FC5               	goto	u351
   519  07C4  2FC6               	goto	u350
   520  07C5                     u351:
   521  07C5  2FEB               	goto	l972
   522  07C6                     u350:
   523  07C6                     l958:
   524                           
   525                           ;LAB_07.c: 87:             CCPR2L = (char) map (ADRESH, 0, 255, 10, 135);
   526  07C6  081E               	movf	30,w	;volatile
   527  07C7  00AE               	movwf	??_main
   528  07C8  01AF               	clrf	??_main+1
   529  07C9  082E               	movf	??_main,w
   530  07CA  00A4               	movwf	map@input
   531  07CB  082F               	movf	??_main+1,w
   532  07CC  00A5               	movwf	map@input+1
   533  07CD  3000               	movlw	0
   534  07CE  00A6               	movwf	map@in_min
   535  07CF  00A7               	movwf	map@in_min+1
   536  07D0  30FF               	movlw	255
   537  07D1  00A8               	movwf	map@in_max
   538  07D2  3000               	movlw	0
   539  07D3  00A9               	movwf	map@in_max+1
   540  07D4  300A               	movlw	10
   541  07D5  00AA               	movwf	map@out_min
   542  07D6  3000               	movlw	0
   543  07D7  00AB               	movwf	map@out_min+1
   544  07D8  3087               	movlw	135
   545  07D9  00AC               	movwf	map@out_max
   546  07DA  3000               	movlw	0
   547  07DB  00AD               	movwf	map@out_max+1
   548  07DC  120A  118A  26D5  120A  118A  	fcall	_map
   549  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   550  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   551  07E3  0824               	movf	?_map,w
   552  07E4  009B               	movwf	27	;volatile
   553  07E5                     l960:
   554                           
   555                           ;LAB_07.c: 88:             ADCON0bits.CHS3 = 0;
   556  07E5  129F               	bcf	31,5	;volatile
   557  07E6                     l962:
   558                           
   559                           ;LAB_07.c: 89:             ADCON0bits.CHS2 = 0;
   560  07E6  121F               	bcf	31,4	;volatile
   561  07E7                     l964:
   562                           
   563                           ;LAB_07.c: 90:             ADCON0bits.CHS1 = 0;
   564  07E7  119F               	bcf	31,3	;volatile
   565  07E8                     l966:
   566                           
   567                           ;LAB_07.c: 91:             ADCON0bits.CHS0 = 1;
   568  07E8  151F               	bsf	31,2	;volatile
   569  07E9                     l968:
   570                           
   571                           ;LAB_07.c: 93:             Bandera = 0;
   572  07E9  01B0               	clrf	_Bandera
   573  07EA  2FB5               	goto	l954
   574  07EB                     l972:
   575                           
   576                           ;LAB_07.c: 98:         ADCON0bits.GO = 1;
   577  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   578  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   579  07ED  149F               	bsf	31,1	;volatile
   580  07EE                     l66:	
   581                           ;LAB_07.c: 99:         while(ADCON0bits.GO == 1);
   582                           
   583  07EE  189F               	btfsc	31,1	;volatile
   584  07EF  2FF1               	goto	u361
   585  07F0  2FF2               	goto	u360
   586  07F1                     u361:
   587  07F1  2FEE               	goto	l66
   588  07F2                     u360:
   589  07F2                     l68:
   590                           
   591                           ;LAB_07.c: 100:         ADIF = 0;
   592  07F2  130C               	bcf	12,6	;volatile
   593  07F3  2F89               	goto	l940
   594  07F4  120A  118A  2800   	ljmp	start
   595  07F7                     __end_of_main:
   596                           
   597                           	psect	text1
   598  065C                     __ptext1:	
   599 ;; *************** function _setupTMR2 *****************
   600 ;; Defined at:
   601 ;;		line 196 in file "LAB_07.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   615 ;;      Params:         0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0
   618 ;;      Totals:         0       0       0       0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels used: 1
   621 ;; This function calls:
   622 ;;		Nothing
   623 ;; This function is called by:
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628  065C                     _setupTMR2:	
   629                           ;psect for function _setupTMR2
   630                           
   631  065C                     l908:	
   632                           ;incstack = 0
   633                           ; Regs used in _setupTMR2: [wreg+status,2+status,0]
   634                           
   635                           
   636                           ;LAB_07.c: 198:     PIR1bits.TMR2IF = 0;
   637  065C  1283               	bcf	3,5	;RP0=0, select bank0
   638  065D  1303               	bcf	3,6	;RP1=0, select bank0
   639  065E  108C               	bcf	12,1	;volatile
   640  065F                     l910:
   641                           
   642                           ;LAB_07.c: 199:     T2CONbits.T2CKPS = 0b11;
   643  065F  3003               	movlw	3
   644  0660  0492               	iorwf	18,f	;volatile
   645  0661                     l912:
   646                           
   647                           ;LAB_07.c: 200:     T2CONbits.TMR2ON = 1;
   648  0661  1512               	bsf	18,2	;volatile
   649  0662                     l83:	
   650                           ;LAB_07.c: 201:     while(PIR1bits.TMR2IF == 0);
   651                           
   652  0662  1C8C               	btfss	12,1	;volatile
   653  0663  2E65               	goto	u331
   654  0664  2E66               	goto	u330
   655  0665                     u331:
   656  0665  2E62               	goto	l83
   657  0666                     u330:
   658  0666                     l85:
   659                           
   660                           ;LAB_07.c: 202:     PIR1bits.TMR2IF = 0;
   661  0666  108C               	bcf	12,1	;volatile
   662  0667                     l86:
   663  0667  0008               	return
   664  0668                     __end_of_setupTMR2:
   665                           
   666                           	psect	text2
   667  0691                     __ptext2:	
   668 ;; *************** function _setupPWM *****************
   669 ;; Defined at:
   670 ;;		line 160 in file "LAB_07.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;		None
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, status,2, status,0
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   684 ;;      Params:         0       0       0       0       0
   685 ;;      Locals:         0       0       0       0       0
   686 ;;      Temps:          0       0       0       0       0
   687 ;;      Totals:         0       0       0       0       0
   688 ;;Total ram usage:        0 bytes
   689 ;; Hardware stack levels used: 1
   690 ;; This function calls:
   691 ;;		Nothing
   692 ;; This function is called by:
   693 ;;		_main
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697  0691                     _setupPWM:	
   698                           ;psect for function _setupPWM
   699                           
   700  0691                     l914:	
   701                           ;incstack = 0
   702                           ; Regs used in _setupPWM: [wreg+status,2+status,0]
   703                           
   704                           
   705                           ;LAB_07.c: 164:     TRISCbits.TRISC2 = 1;
   706  0691  1683               	bsf	3,5	;RP0=1, select bank1
   707  0692  1303               	bcf	3,6	;RP1=0, select bank1
   708  0693  1507               	bsf	7,2	;volatile
   709                           
   710                           ;LAB_07.c: 165:     TRISCbits.TRISC1 = 1;
   711  0694  1487               	bsf	7,1	;volatile
   712  0695                     l916:
   713                           
   714                           ;LAB_07.c: 169:     PR2 = 249;
   715  0695  30F9               	movlw	249
   716  0696  0092               	movwf	18	;volatile
   717  0697                     l918:
   718                           
   719                           ;LAB_07.c: 173:     CCP1CONbits.P1M = 0;
   720  0697  303F               	movlw	-193
   721  0698  1283               	bcf	3,5	;RP0=0, select bank0
   722  0699  1303               	bcf	3,6	;RP1=0, select bank0
   723  069A  0597               	andwf	23,f	;volatile
   724  069B                     l920:
   725                           
   726                           ;LAB_07.c: 174:     CCP1CONbits.CCP1M = 0b1100;
   727  069B  0817               	movf	23,w	;volatile
   728  069C  39F0               	andlw	-16
   729  069D  380C               	iorlw	12
   730  069E  0097               	movwf	23	;volatile
   731  069F                     l922:
   732                           
   733                           ;LAB_07.c: 175:     CCP2CONbits.CCP2M = 0b1100;
   734  069F  081D               	movf	29,w	;volatile
   735  06A0  39F0               	andlw	-16
   736  06A1  380C               	iorlw	12
   737  06A2  009D               	movwf	29	;volatile
   738  06A3                     l924:
   739                           
   740                           ;LAB_07.c: 179:     CCPR1L = 0b00011110;
   741  06A3  301E               	movlw	30
   742  06A4  0095               	movwf	21	;volatile
   743  06A5                     l926:
   744                           
   745                           ;LAB_07.c: 180:     CCPR2L = 0b00011110;
   746  06A5  301E               	movlw	30
   747  06A6  009B               	movwf	27	;volatile
   748  06A7                     l928:
   749                           
   750                           ;LAB_07.c: 181:     CCP1CONbits.DC1B = 0;
   751  06A7  30CF               	movlw	-49
   752  06A8  0597               	andwf	23,f	;volatile
   753  06A9                     l930:
   754                           
   755                           ;LAB_07.c: 182:     CCP2CONbits.DC2B0 = 0;
   756  06A9  121D               	bcf	29,4	;volatile
   757  06AA                     l932:
   758                           
   759                           ;LAB_07.c: 183:     CCP2CONbits.DC2B1 = 0;
   760  06AA  129D               	bcf	29,5	;volatile
   761  06AB                     l934:
   762                           
   763                           ;LAB_07.c: 187:     TRISCbits.TRISC2 = 0;
   764  06AB  1683               	bsf	3,5	;RP0=1, select bank1
   765  06AC  1303               	bcf	3,6	;RP1=0, select bank1
   766  06AD  1107               	bcf	7,2	;volatile
   767  06AE                     l936:
   768                           
   769                           ;LAB_07.c: 188:     TRISCbits.TRISC1 = 0;
   770  06AE  1087               	bcf	7,1	;volatile
   771  06AF                     l80:
   772  06AF  0008               	return
   773  06B0                     __end_of_setupPWM:
   774                           
   775                           	psect	text3
   776  0668                     __ptext3:	
   777 ;; *************** function _setupADC *****************
   778 ;; Defined at:
   779 ;;		line 132 in file "LAB_07.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0
   795 ;;      Temps:          1       0       0       0       0
   796 ;;      Totals:         1       0       0       0       0
   797 ;;Total ram usage:        1 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806  0668                     _setupADC:	
   807                           ;psect for function _setupADC
   808                           
   809  0668                     l900:	
   810                           ;incstack = 0
   811                           ; Regs used in _setupADC: [wreg+status,2+status,0]
   812                           
   813                           
   814                           ;LAB_07.c: 136:     ADCON0bits.ADCS1 = 0;
   815  0668  1283               	bcf	3,5	;RP0=0, select bank0
   816  0669  1303               	bcf	3,6	;RP1=0, select bank0
   817  066A  139F               	bcf	31,7	;volatile
   818                           
   819                           ;LAB_07.c: 137:     ADCON0bits.ADCS0 = 1;
   820  066B  171F               	bsf	31,6	;volatile
   821                           
   822                           ;LAB_07.c: 141:     ADCON1bits.VCFG0 = 0;
   823  066C  1683               	bsf	3,5	;RP0=1, select bank1
   824  066D  1303               	bcf	3,6	;RP1=0, select bank1
   825  066E  121F               	bcf	31,4	;volatile
   826                           
   827                           ;LAB_07.c: 142:     ADCON1bits.VCFG1 = 0;
   828  066F  129F               	bcf	31,5	;volatile
   829                           
   830                           ;LAB_07.c: 144:     ADCON1bits.ADFM = 0;
   831  0670  139F               	bcf	31,7	;volatile
   832  0671                     l902:
   833                           
   834                           ;LAB_07.c: 148:     ADCON0bits.CHS = 0b0000;
   835  0671  30C3               	movlw	-61
   836  0672  1283               	bcf	3,5	;RP0=0, select bank0
   837  0673  1303               	bcf	3,6	;RP1=0, select bank0
   838  0674  059F               	andwf	31,f	;volatile
   839  0675                     l904:
   840                           
   841                           ;LAB_07.c: 151:     ADCON0bits.ADON = 1;
   842  0675  141F               	bsf	31,0	;volatile
   843  0676                     l906:
   844                           
   845                           ;LAB_07.c: 152:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   846  0676  3021               	movlw	33
   847  0677  00F0               	movwf	??_setupADC
   848  0678                     u387:
   849  0678  0BF0               	decfsz	??_setupADC,f
   850  0679  2E78               	goto	u387
   851  067A                     l77:
   852  067A  0008               	return
   853  067B                     __end_of_setupADC:
   854                           
   855                           	psect	text4
   856  067B                     __ptext4:	
   857 ;; *************** function _setup *****************
   858 ;; Defined at:
   859 ;;		line 109 in file "LAB_07.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0
   876 ;;      Totals:         0       0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886  067B                     _setup:	
   887                           ;psect for function _setup
   888                           
   889  067B                     l890:	
   890                           ;incstack = 0
   891                           ; Regs used in _setup: [wreg+status,2+status,0]
   892                           
   893                           
   894                           ;LAB_07.c: 111:     ANSEL = 0b00000011;
   895  067B  3003               	movlw	3
   896  067C  1683               	bsf	3,5	;RP0=1, select bank3
   897  067D  1703               	bsf	3,6	;RP1=1, select bank3
   898  067E  0088               	movwf	8	;volatile
   899  067F                     l892:
   900                           
   901                           ;LAB_07.c: 112:     ANSELH = 0;
   902  067F  0189               	clrf	9	;volatile
   903  0680                     l894:
   904                           
   905                           ;LAB_07.c: 114:     TRISA = 0b00000011;
   906  0680  3003               	movlw	3
   907  0681  1683               	bsf	3,5	;RP0=1, select bank1
   908  0682  1303               	bcf	3,6	;RP1=0, select bank1
   909  0683  0085               	movwf	5	;volatile
   910                           
   911                           ;LAB_07.c: 115:     TRISC = 0;
   912  0684  0187               	clrf	7	;volatile
   913                           
   914                           ;LAB_07.c: 117:     PORTA = 0;
   915  0685  1283               	bcf	3,5	;RP0=0, select bank0
   916  0686  1303               	bcf	3,6	;RP1=0, select bank0
   917  0687  0185               	clrf	5	;volatile
   918                           
   919                           ;LAB_07.c: 118:     PORTC = 0;
   920  0688  0187               	clrf	7	;volatile
   921  0689                     l896:
   922                           
   923                           ;LAB_07.c: 123:     OSCCONbits.IRCF = 0b0110 ;
   924  0689  1683               	bsf	3,5	;RP0=1, select bank1
   925  068A  1303               	bcf	3,6	;RP1=0, select bank1
   926  068B  080F               	movf	15,w	;volatile
   927  068C  398F               	andlw	-113
   928  068D  3860               	iorlw	96
   929  068E  008F               	movwf	15	;volatile
   930  068F                     l898:
   931                           
   932                           ;LAB_07.c: 124:     OSCCONbits.SCS = 1;
   933  068F  140F               	bsf	15,0	;volatile
   934  0690                     l74:
   935  0690  0008               	return
   936  0691                     __end_of_setup:
   937                           
   938                           	psect	text5
   939  06D5                     __ptext5:	
   940 ;; *************** function _map *****************
   941 ;; Defined at:
   942 ;;		line 58 in file "LAB_07.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  input           2    4[BANK0 ] int 
   945 ;;  in_min          2    6[BANK0 ] int 
   946 ;;  in_max          2    8[BANK0 ] int 
   947 ;;  out_min         2   10[BANK0 ] int 
   948 ;;  out_max         2   12[BANK0 ] int 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  output          2   11[COMMON] int 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  2    4[BANK0 ] int 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   960 ;;      Params:         0      10       0       0       0
   961 ;;      Locals:         2       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0
   963 ;;      Totals:         2      10       0       0       0
   964 ;;Total ram usage:       12 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 1
   967 ;; This function calls:
   968 ;;		___awdiv
   969 ;;		___wmul
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975  06D5                     _map:	
   976                           ;psect for function _map
   977                           
   978  06D5                     l884:	
   979                           ;incstack = 0
   980                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
   981                           
   982                           
   983                           ;LAB_07.c: 59:   int output = (input - in_min) * (out_max - out_min) / (in_max - in_min)
      +                           + out_min;
   984  06D5  1283               	bcf	3,5	;RP0=0, select bank0
   985  06D6  1303               	bcf	3,6	;RP1=0, select bank0
   986  06D7  0826               	movf	map@in_min,w
   987  06D8  0228               	subwf	map@in_max,w
   988  06D9  00F6               	movwf	___awdiv@divisor
   989  06DA  0827               	movf	map@in_min+1,w
   990  06DB  1C03               	skipc
   991  06DC  0A27               	incf	map@in_min+1,w
   992  06DD  0229               	subwf	map@in_max+1,w
   993  06DE  00F7               	movwf	___awdiv@divisor+1
   994  06DF  0826               	movf	map@in_min,w
   995  06E0  0224               	subwf	map@input,w
   996  06E1  00F0               	movwf	___wmul@multiplier
   997  06E2  0827               	movf	map@in_min+1,w
   998  06E3  1C03               	skipc
   999  06E4  0A27               	incf	map@in_min+1,w
  1000  06E5  0225               	subwf	map@input+1,w
  1001  06E6  00F1               	movwf	___wmul@multiplier+1
  1002  06E7  082A               	movf	map@out_min,w
  1003  06E8  022C               	subwf	map@out_max,w
  1004  06E9  00F2               	movwf	___wmul@multiplicand
  1005  06EA  082B               	movf	map@out_min+1,w
  1006  06EB  1C03               	skipc
  1007  06EC  0A2B               	incf	map@out_min+1,w
  1008  06ED  022D               	subwf	map@out_max+1,w
  1009  06EE  00F3               	movwf	___wmul@multiplicand+1
  1010  06EF  120A  118A  26B0  120A  118A  	fcall	___wmul
  1011  06F4  0871               	movf	?___wmul+1,w
  1012  06F5  00F9               	movwf	___awdiv@dividend+1
  1013  06F6  0870               	movf	?___wmul,w
  1014  06F7  00F8               	movwf	___awdiv@dividend
  1015  06F8  120A  118A  270C  120A  118A  	fcall	___awdiv
  1016  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1017  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1018  06FF  082A               	movf	map@out_min,w
  1019  0700  0776               	addwf	?___awdiv,w
  1020  0701  00FB               	movwf	map@output
  1021  0702  082B               	movf	map@out_min+1,w
  1022  0703  1803               	skipnc
  1023  0704  0A2B               	incf	map@out_min+1,w
  1024  0705  0777               	addwf	?___awdiv+1,w
  1025  0706  00FC               	movwf	map@output+1
  1026  0707                     l886:
  1027                           
  1028                           ;LAB_07.c: 60:   return output;
  1029  0707  087C               	movf	map@output+1,w
  1030  0708  00A5               	movwf	?_map+1
  1031  0709  087B               	movf	map@output,w
  1032  070A  00A4               	movwf	?_map
  1033  070B                     l57:
  1034  070B  0008               	return
  1035  070C                     __end_of_map:
  1036                           
  1037                           	psect	text6
  1038  06B0                     __ptext6:	
  1039 ;; *************** function ___wmul *****************
  1040 ;; Defined at:
  1041 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  multiplier      2    0[COMMON] unsigned int 
  1044 ;;  multiplicand    2    2[COMMON] unsigned int 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  product         2    4[COMMON] unsigned int 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  2    0[COMMON] unsigned int 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         4       0       0       0       0
  1057 ;;      Locals:         2       0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0
  1059 ;;      Totals:         6       0       0       0       0
  1060 ;;Total ram usage:        6 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_map
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069  06B0                     ___wmul:	
  1070                           ;psect for function ___wmul
  1071                           
  1072  06B0                     l826:	
  1073                           ;incstack = 0
  1074                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1075                           
  1076  06B0  01F4               	clrf	___wmul@product
  1077  06B1  01F5               	clrf	___wmul@product+1
  1078  06B2                     l828:
  1079  06B2  1C70               	btfss	___wmul@multiplier,0
  1080  06B3  2EB5               	goto	u191
  1081  06B4  2EB6               	goto	u190
  1082  06B5                     u191:
  1083  06B5  2EBC               	goto	l172
  1084  06B6                     u190:
  1085  06B6                     l830:
  1086  06B6  0872               	movf	___wmul@multiplicand,w
  1087  06B7  07F4               	addwf	___wmul@product,f
  1088  06B8  1803               	skipnc
  1089  06B9  0AF5               	incf	___wmul@product+1,f
  1090  06BA  0873               	movf	___wmul@multiplicand+1,w
  1091  06BB  07F5               	addwf	___wmul@product+1,f
  1092  06BC                     l172:
  1093  06BC  3001               	movlw	1
  1094  06BD                     u205:
  1095  06BD  1003               	clrc
  1096  06BE  0DF2               	rlf	___wmul@multiplicand,f
  1097  06BF  0DF3               	rlf	___wmul@multiplicand+1,f
  1098  06C0  3EFF               	addlw	-1
  1099  06C1  1D03               	skipz
  1100  06C2  2EBD               	goto	u205
  1101  06C3                     l832:
  1102  06C3  3001               	movlw	1
  1103  06C4                     u215:
  1104  06C4  1003               	clrc
  1105  06C5  0CF1               	rrf	___wmul@multiplier+1,f
  1106  06C6  0CF0               	rrf	___wmul@multiplier,f
  1107  06C7  3EFF               	addlw	-1
  1108  06C8  1D03               	skipz
  1109  06C9  2EC4               	goto	u215
  1110  06CA                     l834:
  1111  06CA  0870               	movf	___wmul@multiplier,w
  1112  06CB  0471               	iorwf	___wmul@multiplier+1,w
  1113  06CC  1D03               	btfss	3,2
  1114  06CD  2ECF               	goto	u221
  1115  06CE  2ED0               	goto	u220
  1116  06CF                     u221:
  1117  06CF  2EB2               	goto	l828
  1118  06D0                     u220:
  1119  06D0                     l836:
  1120  06D0  0875               	movf	___wmul@product+1,w
  1121  06D1  00F1               	movwf	?___wmul+1
  1122  06D2  0874               	movf	___wmul@product,w
  1123  06D3  00F0               	movwf	?___wmul
  1124  06D4                     l174:
  1125  06D4  0008               	return
  1126  06D5                     __end_of___wmul:
  1127                           
  1128                           	psect	text7
  1129  070C                     __ptext7:	
  1130 ;; *************** function ___awdiv *****************
  1131 ;; Defined at:
  1132 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  divisor         2    6[COMMON] int 
  1135 ;;  dividend        2    8[COMMON] int 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  quotient        2    2[BANK0 ] int 
  1138 ;;  sign            1    1[BANK0 ] unsigned char 
  1139 ;;  counter         1    0[BANK0 ] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  2    6[COMMON] int 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2, status,0
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         4       0       0       0       0
  1150 ;;      Locals:         0       4       0       0       0
  1151 ;;      Temps:          1       0       0       0       0
  1152 ;;      Totals:         5       4       0       0       0
  1153 ;;Total ram usage:        9 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_map
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162  070C                     ___awdiv:	
  1163                           ;psect for function ___awdiv
  1164                           
  1165  070C                     l840:	
  1166                           ;incstack = 0
  1167                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1168                           
  1169  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1170  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1171  070E  01A1               	clrf	___awdiv@sign
  1172  070F                     l842:
  1173  070F  1FF7               	btfss	___awdiv@divisor+1,7
  1174  0710  2F12               	goto	u231
  1175  0711  2F13               	goto	u230
  1176  0712                     u231:
  1177  0712  2F1A               	goto	l848
  1178  0713                     u230:
  1179  0713                     l844:
  1180  0713  09F6               	comf	___awdiv@divisor,f
  1181  0714  09F7               	comf	___awdiv@divisor+1,f
  1182  0715  0AF6               	incf	___awdiv@divisor,f
  1183  0716  1903               	skipnz
  1184  0717  0AF7               	incf	___awdiv@divisor+1,f
  1185  0718                     l846:
  1186  0718  01A1               	clrf	___awdiv@sign
  1187  0719  0AA1               	incf	___awdiv@sign,f
  1188  071A                     l848:
  1189  071A  1FF9               	btfss	___awdiv@dividend+1,7
  1190  071B  2F1D               	goto	u241
  1191  071C  2F1E               	goto	u240
  1192  071D                     u241:
  1193  071D  2F27               	goto	l854
  1194  071E                     u240:
  1195  071E                     l850:
  1196  071E  09F8               	comf	___awdiv@dividend,f
  1197  071F  09F9               	comf	___awdiv@dividend+1,f
  1198  0720  0AF8               	incf	___awdiv@dividend,f
  1199  0721  1903               	skipnz
  1200  0722  0AF9               	incf	___awdiv@dividend+1,f
  1201  0723                     l852:
  1202  0723  3001               	movlw	1
  1203  0724  00FA               	movwf	??___awdiv
  1204  0725  087A               	movf	??___awdiv,w
  1205  0726  06A1               	xorwf	___awdiv@sign,f
  1206  0727                     l854:
  1207  0727  01A2               	clrf	___awdiv@quotient
  1208  0728  01A3               	clrf	___awdiv@quotient+1
  1209  0729                     l856:
  1210  0729  0876               	movf	___awdiv@divisor,w
  1211  072A  0477               	iorwf	___awdiv@divisor+1,w
  1212  072B  1903               	btfsc	3,2
  1213  072C  2F2E               	goto	u251
  1214  072D  2F2F               	goto	u250
  1215  072E                     u251:
  1216  072E  2F66               	goto	l876
  1217  072F                     u250:
  1218  072F                     l858:
  1219  072F  01A0               	clrf	___awdiv@counter
  1220  0730  0AA0               	incf	___awdiv@counter,f
  1221  0731  2F3D               	goto	l864
  1222  0732                     l860:
  1223  0732  3001               	movlw	1
  1224  0733                     u265:
  1225  0733  1003               	clrc
  1226  0734  0DF6               	rlf	___awdiv@divisor,f
  1227  0735  0DF7               	rlf	___awdiv@divisor+1,f
  1228  0736  3EFF               	addlw	-1
  1229  0737  1D03               	skipz
  1230  0738  2F33               	goto	u265
  1231  0739                     l862:
  1232  0739  3001               	movlw	1
  1233  073A  00FA               	movwf	??___awdiv
  1234  073B  087A               	movf	??___awdiv,w
  1235  073C  07A0               	addwf	___awdiv@counter,f
  1236  073D                     l864:
  1237  073D  1FF7               	btfss	___awdiv@divisor+1,7
  1238  073E  2F40               	goto	u271
  1239  073F  2F41               	goto	u270
  1240  0740                     u271:
  1241  0740  2F32               	goto	l860
  1242  0741                     u270:
  1243  0741                     l866:
  1244  0741  3001               	movlw	1
  1245  0742                     u285:
  1246  0742  1003               	clrc
  1247  0743  0DA2               	rlf	___awdiv@quotient,f
  1248  0744  0DA3               	rlf	___awdiv@quotient+1,f
  1249  0745  3EFF               	addlw	-1
  1250  0746  1D03               	skipz
  1251  0747  2F42               	goto	u285
  1252  0748  0877               	movf	___awdiv@divisor+1,w
  1253  0749  0279               	subwf	___awdiv@dividend+1,w
  1254  074A  1D03               	skipz
  1255  074B  2F4E               	goto	u295
  1256  074C  0876               	movf	___awdiv@divisor,w
  1257  074D  0278               	subwf	___awdiv@dividend,w
  1258  074E                     u295:
  1259  074E  1C03               	skipc
  1260  074F  2F51               	goto	u291
  1261  0750  2F52               	goto	u290
  1262  0751                     u291:
  1263  0751  2F59               	goto	l872
  1264  0752                     u290:
  1265  0752                     l868:
  1266  0752  0876               	movf	___awdiv@divisor,w
  1267  0753  02F8               	subwf	___awdiv@dividend,f
  1268  0754  0877               	movf	___awdiv@divisor+1,w
  1269  0755  1C03               	skipc
  1270  0756  03F9               	decf	___awdiv@dividend+1,f
  1271  0757  02F9               	subwf	___awdiv@dividend+1,f
  1272  0758                     l870:
  1273  0758  1422               	bsf	___awdiv@quotient,0
  1274  0759                     l872:
  1275  0759  3001               	movlw	1
  1276  075A                     u305:
  1277  075A  1003               	clrc
  1278  075B  0CF7               	rrf	___awdiv@divisor+1,f
  1279  075C  0CF6               	rrf	___awdiv@divisor,f
  1280  075D  3EFF               	addlw	-1
  1281  075E  1D03               	skipz
  1282  075F  2F5A               	goto	u305
  1283  0760                     l874:
  1284  0760  3001               	movlw	1
  1285  0761  02A0               	subwf	___awdiv@counter,f
  1286  0762  1D03               	btfss	3,2
  1287  0763  2F65               	goto	u311
  1288  0764  2F66               	goto	u310
  1289  0765                     u311:
  1290  0765  2F41               	goto	l866
  1291  0766                     u310:
  1292  0766                     l876:
  1293  0766  0821               	movf	___awdiv@sign,w
  1294  0767  1903               	btfsc	3,2
  1295  0768  2F6A               	goto	u321
  1296  0769  2F6B               	goto	u320
  1297  076A                     u321:
  1298  076A  2F70               	goto	l880
  1299  076B                     u320:
  1300  076B                     l878:
  1301  076B  09A2               	comf	___awdiv@quotient,f
  1302  076C  09A3               	comf	___awdiv@quotient+1,f
  1303  076D  0AA2               	incf	___awdiv@quotient,f
  1304  076E  1903               	skipnz
  1305  076F  0AA3               	incf	___awdiv@quotient+1,f
  1306  0770                     l880:
  1307  0770  0823               	movf	___awdiv@quotient+1,w
  1308  0771  00F7               	movwf	?___awdiv+1
  1309  0772  0822               	movf	___awdiv@quotient,w
  1310  0773  00F6               	movwf	?___awdiv
  1311  0774                     l325:
  1312  0774  0008               	return
  1313  0775                     __end_of___awdiv:
  1314  007E                     btemp	set	126	;btemp
  1315  007E                     wtemp0	set	126
  1316                           
  1317                           	psect	idloc
  1318                           
  1319                           ;Config register IDLOC0 @ 0x2000
  1320                           ;	unspecified, using default values
  1321  2000                     	org	8192
  1322  2000  3FFF               	dw	16383
  1323                           
  1324                           ;Config register IDLOC1 @ 0x2001
  1325                           ;	unspecified, using default values
  1326  2001                     	org	8193
  1327  2001  3FFF               	dw	16383
  1328                           
  1329                           ;Config register IDLOC2 @ 0x2002
  1330                           ;	unspecified, using default values
  1331  2002                     	org	8194
  1332  2002  3FFF               	dw	16383
  1333                           
  1334                           ;Config register IDLOC3 @ 0x2003
  1335                           ;	unspecified, using default values
  1336  2003                     	org	8195
  1337  2003  3FFF               	dw	16383
  1338                           
  1339                           	psect	config
  1340                           
  1341                           ;Config register CONFIG1 @ 0x2007
  1342                           ;	Oscillator Selection bits
  1343                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1344                           ;	Watchdog Timer Enable bit
  1345                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1346                           ;	Power-up Timer Enable bit
  1347                           ;	PWRTE = OFF, PWRT disabled
  1348                           ;	RE3/MCLR pin function select bit
  1349                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1350                           ;	Code Protection bit
  1351                           ;	CP = OFF, Program memory code protection is disabled
  1352                           ;	Data Code Protection bit
  1353                           ;	CPD = OFF, Data memory code protection is disabled
  1354                           ;	Brown Out Reset Selection bits
  1355                           ;	BOREN = OFF, BOR disabled
  1356                           ;	Internal External Switchover bit
  1357                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1358                           ;	Fail-Safe Clock Monitor Enabled bit
  1359                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1360                           ;	Low Voltage Programming Enable bit
  1361                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1362                           ;	In-Circuit Debugger Mode bit
  1363                           ;	DEBUG = 0x1, unprogrammed default
  1364  2007                     	org	8199
  1365  2007  20D4               	dw	8404
  1366                           
  1367                           ;Config register CONFIG2 @ 0x2008
  1368                           ;	Brown-out Reset Selection bit
  1369                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1370                           ;	Flash Program Memory Self Write Enable bits
  1371                           ;	WRT = OFF, Write protection off
  1372  2008                     	org	8200
  1373  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     16      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_map
    _map->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_map
    _map->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1633
                                             14 BANK0      2     2      0
                                _map
                              _setup
                           _setupADC
                           _setupPWM
                          _setupTMR2
 ---------------------------------------------------------------------------------
 (1) _setupTMR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _map                                                 12     2     10    1633
                                             11 COMMON     2     2      0
                                              4 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _map
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _setup
   _setupADC
   _setupPWM
   _setupTMR2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Apr 10 18:58:10 2023

                     l80 06AF                       l57 070B                       l74 0690  
                     l66 07EE                       l83 0662                       l68 07F2  
                     l77 067A                       l85 0666                       l86 0667  
           ___awdiv@sign 0021      ___wmul@multiplicand 0072                      l172 06BC  
                    l325 0774                      l174 06D4                      l900 0668  
                    l830 06B6                      l902 0671                      l910 065F  
                    l840 070C                      l832 06C3                      l904 0675  
                    l920 069B                      l912 0661                      l850 071E  
                    l842 070F                      l834 06CA                      l826 06B0  
                    l906 0676                      l930 06A9                      l922 069F  
                    l914 0691                      l860 0732                      l852 0723  
                    l844 0713                      l836 06D0                      l828 06B2  
                    l932 06AA                      l924 06A3                      l916 0695  
                    l908 065C                      l940 0789                      l870 0758  
                    l862 0739                      l854 0727                      l846 0718  
                    l934 06AB                      l926 06A5                      l918 0697  
                    l950 07B2                      l942 0790                      l880 0770  
                    l872 0759                      l864 073D                      l856 0729  
                    l848 071A                      l936 06AE                      l928 06A7  
                    l960 07E5                      l952 07B3                      l944 07AF  
                    l874 0760                      l866 0741                      l858 072F  
                    l890 067B                      l962 07E6                      l954 07B5  
                    l946 07B0                      l938 0775                      l868 0752  
                    l876 0766                      l884 06D5                      l892 067F  
                    l964 07E7                      l972 07EB                      l948 07B1  
                    l956 07C1                      l878 076B                      l886 0707  
                    l894 0680                      l966 07E8                      l958 07C6  
                    l896 0689                      l968 07E9                      l898 068F  
                    u220 06D0                      u221 06CF                      u205 06BD  
                    u310 0766                      u230 0713                      u311 0765  
                    u231 0712                      u215 06C4                      u320 076B  
                    u240 071E                      u321 076A                      u305 075A  
                    u241 071D                      u250 072F                      u330 0666  
                    u251 072E                      u331 0665                      u340 0790  
                    u341 078F                      u270 0741                      u190 06B6  
                    u350 07C6                      _PR2 0092                      u271 0740  
                    u191 06B5                      u351 07C5                      u360 07F2  
                    u265 0733                      u361 07F1                      u290 0752  
                    u291 0751                      u285 0742                      u295 074E  
                    u377 07BB                      u387 0678                      _map 06D5  
                   ?_map 0024                     _ADIF 0066                     _POT1 007D  
                   _POT2 0031                     _main 0775                     btemp 007E  
                   start 0000                    ??_map 007B                    ?_main 0070  
        __end_of___awdiv 0775                    _ANSEL 0188          ___awdiv@divisor 0076  
        ___awdiv@counter 0020                    _PORTA 0005                    _PORTC 0007  
                  _TRISA 0085                    _TRISC 0087                    _setup 067B  
                  status 0003                    wtemp0 007E          __initialization 07F7  
           __end_of_main 07F7                   ??_main 002E                   _ADRESH 001E  
                 _CCPR1L 0015                   _CCPR2L 001B         ___awdiv@dividend 0078  
                 ?_setup 0070                   _ANSELH 0189                   ___wmul 06B0  
              ??___awdiv 007A         ___awdiv@quotient 0022         __end_of_setupADC 067B  
       __end_of_setupPWM 06B0  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 0691                  ??_setup 0070               __pbssBANK0 0030  
             __pmaintext 0775                  ?___wmul 0070                  _Bandera 0030  
              ?_setupADC 0070                ?_setupPWM 0070                  ___awdiv 070C  
                __ptext1 065C                  __ptext2 0691                  __ptext3 0668  
                __ptext4 067B                  __ptext5 06D5                  __ptext6 06B0  
                __ptext7 070C                _T2CONbits 0012     end_of_initialization 07FC  
      __end_of_setupTMR2 0668               ??_setupADC 0070               ??_setupPWM 0070  
              _TRISCbits 0087               map@out_max 002C               map@out_min 002A  
            _CCP1CONbits 0017              _CCP2CONbits 001D           __end_of___wmul 06D5  
    start_initialization 07F7              __end_of_map 070C                 ??___wmul 0074  
            __pbssCOMMON 007D                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0076           ___wmul@product 0074                 _PIR1bits 000C  
              _setupTMR2 065C                map@in_max 0028                map@in_min 0026  
             _ADCON0bits 001F               _ADCON1bits 009F        ___wmul@multiplier 0070  
              map@output 007B               ?_setupTMR2 0070                 _setupADC 0668  
               _setupPWM 0691                 map@input 0024               _OSCCONbits 008F  
            ??_setupTMR2 0070  
